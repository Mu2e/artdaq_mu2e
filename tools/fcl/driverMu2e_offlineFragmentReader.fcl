# FHiCL document used to run the "driver" executable. To learn more
#  about the FHiCL language, please look at
#  cdcvs.fnal.gov/redmine/documents/327 , the "FHiCL Quick Start Guide"

events_to_generate: 1
run_number: 101

fragment_receiver: {

  # Parameters defining and configuring the fragment generator to be used

  generator: Mu2eReceiver
  ring_0_roc_count: 1
  ring_0_timing_enabled: false
  debug_print: true
  verbose: true
  raw_output_enable: true
  raw_output_file: "mu2eReceiver.bin"
  #sim_file: "/home/mu2edaq/data/simData/mediumPackets.bin"
  # Parameters configuring the fragment generator's parent class
  # artdaq::CommandableFragmentGenerator

  fragment_id: 0
  board_id: 0
}

event_builder: {
  expected_fragments_per_event: 1
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
}

######################################################################
# The ART code
######################################################################

physics:
{

  analyzers:
  {
    a1:
    {
      module_type: OfflineFragmentsDumper
    }
  }

  t1: [a1]

}

outputs:
{
  rootout:
  {
    module_type: RootOutput
    fileName: "driver.root"
    compressionLevel: 0
  }
  out1:
  {
    module_type: FileDumperOutput
    wantProductFriendlyClassName: true
  }
}

source:
{
  module_type: OfflineFragmentReader
  waiting_time: 900
  resume_after_timeout: true
}

process_name: Driver
